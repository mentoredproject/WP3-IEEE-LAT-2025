apiVersion: v1
kind: Pod
metadata:
  labels:
    app: nids1
  name: nids1
  annotations:
    cni.projectcalico.org/ipAddrs: "[\"10.128.10.10\"]"

spec:
  #  restartPolicy: Never
  volumes:
  - name: vol
    hostPath:
      path: /vol
  containers:
  - name: nids1
    volumeMounts:
      - name: vol
        mountPath: /app/data  # in the container filesystem
    image: snort:wp3.v5
    command: 
      - "/bin/bash"
      - "-ce"
      - |
          mkdir -p /app/data/Output/Snort/nids1/pcap &&
          service ssh restart &&
          tcpdump -i eth1 -w /app/data/Output/Snort/nids1/pcap/nids1_$(date +'%H%M%S').pcap &
          cat /dev/null > usr/local/etc/rules/pulledpork.rules &&
          echo 'alert udp $EXTERNAL_NET any -> $HOME_NET 50001 ( msg:" Possible UDP DDOS Flood Detection "; detection_filter:track by_dst,count 1000, seconds 5; sid:1000021; )' >> usr/local/etc/rules/pulledpork.rules &&
          echo '{"user": "user", "IP": "192.168.0.2", "path": "/home/user/receiveRules/newRules.rules"}' > /ruleShare/ssh_address.json &&
          echo '{"user": "user", "IP": "192.168.0.3", "path": "/home/user/receiveRules/newRules.rules"}' >> /ruleShare/ssh_address.json &&
          echo '{"user": "user", "IP": "192.168.0.4", "path": "/home/user/receiveRules/newRules.rules"}' >> /ruleShare/ssh_address.json &&
          echo '{"user": "user", "IP": "192.168.0.5", "path": "/home/user/receiveRules/newRules.rules"}' >> /ruleShare/ssh_address.json &&
          echo '{"user": "user", "IP": "192.168.0.6", "path": "/home/user/receiveRules/newRules.rules"}' >> /ruleShare/ssh_address.json &&
          (/ruleShare/envio.sh /app/data/Output/Snort/nids1/alert_json.txt /app/data/Output/Snort/nids1/ &) &&
          (/ruleShare/recebe.sh /app/data/Output/Snort/nids1/ &) &&
          sed -i 's/HOME_NET = \[\[10\.128\.10\.0\/24, 10\.128\.20\.0\/24, 10\.128\.30\.0\/24\]\]/HOME_NET = \[\[10.128.10.0\/24, 10.128.20.0\/24, 10.128.30.0\/24, 10.128.40.0\/24, 10.128.50.0\/24\]\]/' /usr/local/etc/snort/snort.lua &&
          snort -c /usr/local/etc/snort/snort.lua --daq nfq --daq-var queue=20 -Q -l /app/data/Output/Snort/nids1 &&
          tail -f /dev/null
    securityContext:
      privileged: true
    ports:
      - name: web
        containerPort: 80
      - name: ssh
        containerPort: 22
    resources:
      requests:
        memory: "100Mi"
        cpu: "0.5"
      limits:
        memory: "1000Mi"
        cpu: "1"
  hostNetwork: true
  nodeSelector:
    rede: "1"
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: nids2
  name: nids2
  annotations:
    cni.projectcalico.org/ipAddrs: "[\"10.128.20.10\"]"

spec:
  #restartPolicy: Never
  volumes:
  - name: vol
    hostPath:
      path: /vol
  containers:
  - name: nids2
    volumeMounts:
      - name: vol
        mountPath: /app/data  # in the container filesystem
    image: snort:wp3.v5
    command: 
      - "/bin/bash"
      - "-ce"
      - |
          mkdir -p /app/data/Output/Snort/nids2/pcap &&
          service ssh restart &&
          tcpdump -i eth1 -w /app/data/Output/Snort/nids2/pcap/nids2_$(date +'%H%M%S').pcap &
          cat /dev/null > usr/local/etc/rules/pulledpork.rules &&
          echo 'alert icmp $EXTERNAL_NET any -> $HOME_NET 50001 (msg:"Possible ICMP DDOS Flood Detection"; detection_filter:track by_dst,count 1000,seconds 5; sid:1000022; )' >> usr/local/etc/rules/pulledpork.rules &&
          echo '{"user": "user", "IP": "192.168.0.2", "path": "/home/user/receiveRules/newRules.rules"}' > /ruleShare/ssh_address.json &&
          echo '{"user": "user", "IP": "192.168.0.3", "path": "/home/user/receiveRules/newRules.rules"}' >> /ruleShare/ssh_address.json &&
          echo '{"user": "user", "IP": "192.168.0.4", "path": "/home/user/receiveRules/newRules.rules"}' >> /ruleShare/ssh_address.json &&
          echo '{"user": "user", "IP": "192.168.0.5", "path": "/home/user/receiveRules/newRules.rules"}' >> /ruleShare/ssh_address.json &&
          echo '{"user": "user", "IP": "192.168.0.6", "path": "/home/user/receiveRules/newRules.rules"}' >> /ruleShare/ssh_address.json &&
          (/ruleShare/envio.sh /app/data/Output/Snort/nids2/alert_json.txt /app/data/Output/Snort/nids2/ &) &&
          (/ruleShare/recebe.sh /app/data/Output/Snort/nids2/ &) &&
          sed -i 's/HOME_NET = \[\[10\.128\.10\.0\/24, 10\.128\.20\.0\/24, 10\.128\.30\.0\/24\]\]/HOME_NET = \[\[10.128.10.0\/24, 10.128.20.0\/24, 10.128.30.0\/24, 10.128.40.0\/24, 10.128.50.0\/24\]\]/' /usr/local/etc/snort/snort.lua &&
          snort -c /usr/local/etc/snort/snort.lua --daq nfq --daq-var queue=20 -Q -l /app/data/Output/Snort/nids2 &&
          tail -f /dev/null
    securityContext:
      privileged: true
    ports:
      - name: web
        containerPort: 80
      - name: ssh
        containerPort: 22
    resources:
      requests:
        memory: "100Mi"
        cpu: "0.5"
      limits:
        memory: "1000Mi"
        cpu: "1"
  hostNetwork: true
  nodeSelector:
    rede: "4"
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: nids3
  name: nids3
  annotations:
    cni.projectcalico.org/ipAddrs: "[\"10.128.30.10\"]"

spec:
  volumes:
  - name: vol
    hostPath:
      path: /vol
  containers:
  - name: nids3
    volumeMounts:
      - name: vol
        mountPath: /app/data  # in the container filesystem
    image: snort:wp3.v5
    command: 
      - "/bin/bash"
      - "-ce"
      - |
          mkdir -p /app/data/Output/Snort/nids3/pcap &&
          service ssh restart &&
          tcpdump -i eth1 -w /app/data/Output/Snort/nids3/pcap/nids3_$(date +'%H%M%S').pcap &
          cat /dev/null > usr/local/etc/rules/pulledpork.rules &&
          echo '{"user": "user", "IP": "192.168.0.2", "path": "/home/user/receiveRules/newRules.rules"}' > /ruleShare/ssh_address.json &&
          echo '{"user": "user", "IP": "192.168.0.3", "path": "/home/user/receiveRules/newRules.rules"}' >> /ruleShare/ssh_address.json &&
          echo '{"user": "user", "IP": "192.168.0.4", "path": "/home/user/receiveRules/newRules.rules"}' >> /ruleShare/ssh_address.json &&
          echo '{"user": "user", "IP": "192.168.0.5", "path": "/home/user/receiveRules/newRules.rules"}' >> /ruleShare/ssh_address.json &&
          echo '{"user": "user", "IP": "192.168.0.6", "path": "/home/user/receiveRules/newRules.rules"}' >> /ruleShare/ssh_address.json &&
          (/ruleShare/envio.sh /app/data/Output/Snort/nids3/alert_json.txt /app/data/Output/Snort/nids3/ &) &&
          (/ruleShare/recebe.sh /app/data/Output/Snort/nids3/ &) &&
          sed -i 's/HOME_NET = \[\[10\.128\.10\.0\/24, 10\.128\.20\.0\/24, 10\.128\.30\.0\/24\]\]/HOME_NET = \[\[10.128.10.0\/24, 10.128.20.0\/24, 10.128.30.0\/24, 10.128.40.0\/24, 10.128.50.0\/24\]\]/' /usr/local/etc/snort/snort.lua &&
          snort -c /usr/local/etc/snort/snort.lua --daq nfq --daq-var queue=20 -Q -l /app/data/Output/Snort/nids3 &&
          tail -f /dev/null
    securityContext:
      privileged: true
    ports:
      - name: web
        containerPort: 80
      - name: ssh
        containerPort: 22
    resources:
      requests:
        memory: "100Mi"
        cpu: "0.5"
      limits:
        memory: "1000Mi"
        cpu: "1"
  hostNetwork: true
  nodeSelector:
    rede: "7"
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: nids4
  name: nids4
  annotations:
    cni.projectcalico.org/ipAddrs: "[\"10.128.40.10\"]"

spec:
  volumes:
  - name: vol
    hostPath:
      path: /vol
  containers:
  - name: nids4
    volumeMounts:
      - name: vol
        mountPath: /app/data  # in the container filesystem
    image: snort:wp3.v5
    command: 
      - "/bin/bash"
      - "-ce"
      - |
          mkdir -p /app/data/Output/Snort/nids4/pcap &&
          service ssh restart &&
          tcpdump -i eth1 -w /app/data/Output/Snort/nids4/pcap/nids4_$(date +'%H%M%S').pcap &
          cat /dev/null > usr/local/etc/rules/pulledpork.rules &&
          echo '{"user": "user", "IP": "192.168.0.2", "path": "/home/user/receiveRules/newRules.rules"}' > /ruleShare/ssh_address.json &&
          echo '{"user": "user", "IP": "192.168.0.3", "path": "/home/user/receiveRules/newRules.rules"}' >> /ruleShare/ssh_address.json &&
          echo '{"user": "user", "IP": "192.168.0.4", "path": "/home/user/receiveRules/newRules.rules"}' >> /ruleShare/ssh_address.json &&
          echo '{"user": "user", "IP": "192.168.0.5", "path": "/home/user/receiveRules/newRules.rules"}' >> /ruleShare/ssh_address.json &&
          echo '{"user": "user", "IP": "192.168.0.6", "path": "/home/user/receiveRules/newRules.rules"}' >> /ruleShare/ssh_address.json &&
          (/ruleShare/envio.sh /app/data/Output/Snort/nids4/alert_json.txt /app/data/Output/Snort/nids4/ &) &&
          (/ruleShare/recebe.sh /app/data/Output/Snort/nids4/ &) &&
          sed -i 's/HOME_NET = \[\[10\.128\.10\.0\/24, 10\.128\.20\.0\/24, 10\.128\.30\.0\/24\]\]/HOME_NET = \[\[10.128.10.0\/24, 10.128.20.0\/24, 10.128.30.0\/24, 10.128.40.0\/24, 10.128.50.0\/24\]\]/' /usr/local/etc/snort/snort.lua &&
          snort -c /usr/local/etc/snort/snort.lua --daq nfq --daq-var queue=20 -Q -l /app/data/Output/Snort/nids4 &&
          tail -f /dev/null
    securityContext:
      privileged: true
    ports:
      - name: web
        containerPort: 80
      - name: ssh
        containerPort: 22
    resources:
      requests:
        memory: "100Mi"
        cpu: "0.5"
      limits:
        memory: "1000Mi"
        cpu: "1"
  hostNetwork: true
  nodeSelector:
    rede: "10"
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: nids5
  name: nids5
  annotations:
    cni.projectcalico.org/ipAddrs: "[\"10.128.50.10\"]"

spec:
  volumes:
  - name: vol
    hostPath:
      path: /vol
  containers:
  - name: nids5
    volumeMounts:
      - name: vol
        mountPath: /app/data  # in the container filesystem
    image: snort:wp3.v5
    command: 
      - "/bin/bash"
      - "-ce"
      - |
          mkdir -p /app/data/Output/Snort/nids5/pcap &&
          service ssh restart &&
          tcpdump -i eth1 -w /app/data/Output/Snort/nids5/pcap/nids5_$(date +'%H%M%S').pcap &
          cat /dev/null > usr/local/etc/rules/pulledpork.rules &&
          echo '{"user": "user", "IP": "192.168.0.2", "path": "/home/user/receiveRules/newRules.rules"}' > /ruleShare/ssh_address.json &&
          echo '{"user": "user", "IP": "192.168.0.3", "path": "/home/user/receiveRules/newRules.rules"}' >> /ruleShare/ssh_address.json &&
          echo '{"user": "user", "IP": "192.168.0.4", "path": "/home/user/receiveRules/newRules.rules"}' >> /ruleShare/ssh_address.json &&
          echo '{"user": "user", "IP": "192.168.0.5", "path": "/home/user/receiveRules/newRules.rules"}' >> /ruleShare/ssh_address.json &&
          echo '{"user": "user", "IP": "192.168.0.6", "path": "/home/user/receiveRules/newRules.rules"}' >> /ruleShare/ssh_address.json &&
          (/ruleShare/envio.sh /app/data/Output/Snort/nids5/alert_json.txt /app/data/Output/Snort/nids5/ &) &&
          (/ruleShare/recebe.sh /app/data/Output/Snort/nids5/ &) &&
          sed -i 's/HOME_NET = \[\[10\.128\.10\.0\/24, 10\.128\.20\.0\/24, 10\.128\.30\.0\/24\]\]/HOME_NET = \[\[10.128.10.0\/24, 10.128.20.0\/24, 10.128.30.0\/24, 10.128.40.0\/24, 10.128.50.0\/24\]\]/' /usr/local/etc/snort/snort.lua &&
          snort -c /usr/local/etc/snort/snort.lua --daq nfq --daq-var queue=20 -Q -l /app/data/Output/Snort/nids5 &&
          tail -f /dev/null
    securityContext:
      privileged: true
    ports:
      - name: web
        containerPort: 80
      - name: ssh
        containerPort: 22
    resources:
      requests:
        memory: "100Mi"
        cpu: "0.5"
      limits:
        memory: "1000Mi"
        cpu: "1"
  hostNetwork: true
  nodeSelector:
    rede: "13"

